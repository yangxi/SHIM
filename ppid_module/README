How to load the module & create the device file

Before you load the module, you need to patch your kernel with "callback.path".

sudo insmod ./ppid_map.ko
sudo ./create_ppid_device.sh

/dev/ppid_map provides information about who is running on which processors
by exposing a map to user level mmap requests.

Start from the base address of the map, each processor has one cacheline size slot (64 bytes for intel x86).
For each slot, the first 32bit shows the pid of the thread running on that processor, the second 32bit shows
the the tgid (process id) of the thread.

Here is an example to get the map:

if ((fd=open("/dev/ppid_map", O_RDWR|O_SYNC)) < 0) {
   perror("open")
   exit(-1);
}
kadr = mmap(0, len, PROT_READ|PROT_WRITE, MAP_SHARED| MAP_LOCKED,
		    fd, 0);
if (kadr == MAP_FAILED)	{
   perror("mmap");
   exit(-1);
}
pid_signal_buf = (char *)kadr;

ppid_test.c is an example for reading the signal. Compile&run it, you should see some pids.
